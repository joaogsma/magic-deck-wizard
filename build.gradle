import org.ajoberstar.grgit.Grgit

plugins {
  id 'scala'
  id 'java'
  id 'application'
  id 'org.ajoberstar.grgit' version '1.7.2'
  id 'org.ajoberstar.release-opinion' version '1.7.2'
  id 'com.github.johnrengelman.shadow' version '4.0.2'
}

mainClassName = 'org.joaogsma.controllers.ConsoleController'

ext {
  scalaVersion = '2.12.4'
  circleVersion = '0.9.3'
  scalafxVersion = '8.0.181-R13'
  declineVersion = '0.5.0'
}

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}

release {
  grgit = Grgit.open(currentDir: file('.'))
}

static def removePatch(String str) {
  return str.substring(0, str.lastIndexOf('.'))
}

dependencies {
  compile "org.scala-lang:scala-library:$scalaVersion"
  compile "io.circe:circe-core_${removePatch(scalaVersion)}:$circleVersion"
  compile "io.circe:circe-generic_${removePatch(scalaVersion)}:$circleVersion"
  compile "io.circe:circe-parser_${removePatch(scalaVersion)}:$circleVersion"
  compile "com.monovore:decline_${removePatch(scalaVersion)}:$declineVersion"
  compile "org.scalafx:scalafx_${removePatch(scalaVersion)}:$scalafxVersion"

  testCompile "org.scalatest:scalatest_${removePatch(scalaVersion)}:3.0.0"
}

shadowJar {
  minimize()
  version = project.version
}

task scalaTest(dependsOn: ['testClasses'], type: JavaExec) {
  main = 'org.scalatest.tools.Runner'
  args = ['-R', 'build/classes/scala/test', '-o']
  classpath = sourceSets.test.runtimeClasspath
}

tasks.release.dependsOn build
tasks.test.dependsOn scalaTest
